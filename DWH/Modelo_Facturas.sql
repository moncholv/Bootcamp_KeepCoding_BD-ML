#---> MODELO FACTURAS <---

# 1) Estudio de las tablas <---

# Tabla STG_FACTURAS_FCT
SELECT COUNT(*) TOTAL_REGISTROS
, SUM(CASE WHEN LENGTH(TRIM(BILL_REF_NO))<>0 THEN 1 ELSE 0 END) TOTAL_BILL_REF_NO
, COUNT(DISTINCT CASE WHEN LENGTH(TRIM(BILL_REF_NO))<>0 THEN BILL_REF_NO ELSE 0  END) TOTAL_DISTINTOS_BILL_REF_NO
, SUM(CASE WHEN LENGTH(TRIM(CUSTOMER_ID))<>0 THEN 1 ELSE 0 END) TOTAL_CUSTOMER_ID
, COUNT(DISTINCT CASE WHEN LENGTH(TRIM(CUSTOMER_ID))<>0 THEN CUSTOMER_ID ELSE 0  END) TOTAL_DISTINTOS_CUSTOMER_ID
, SUM(CASE WHEN LENGTH(TRIM(START_DATE))<>0 THEN 1 ELSE 0 END) TOTAL_START_DATE
, COUNT(DISTINCT CASE WHEN LENGTH(TRIM(START_DATE))<>0 THEN START_DATE ELSE 0  END) TOTAL_DISTINTOS_START_DATE
, SUM(CASE WHEN LENGTH(TRIM(END_DATE))<>0 THEN 1 ELSE 0 END) TOTAL_END_DATE
, COUNT(DISTINCT CASE WHEN LENGTH(TRIM(END_DATE))<>0 THEN END_DATE ELSE 0  END) TOTAL_DISTINTOS_END_DATE
, SUM(CASE WHEN LENGTH(TRIM(STATEMENT_DATE))<>0 THEN 1 ELSE 0 END) TOTAL_STATEMENT_DATE
, COUNT(DISTINCT CASE WHEN LENGTH(TRIM(STATEMENT_DATE))<>0 THEN STATEMENT_DATE ELSE 0  END) TOTAL_DISTINTOS_STATEMENT_DATE
, SUM(CASE WHEN LENGTH(TRIM(PAYMENT_DATE))<>0 THEN 1 ELSE 0 END) TOTAL_PAYMENT_DATE
, COUNT(DISTINCT CASE WHEN LENGTH(TRIM(PAYMENT_DATE))<>0 THEN PAYMENT_DATE ELSE 0  END) TOTAL_DISTINTOS_PAYMENT_DATE
, SUM(CASE WHEN LENGTH(TRIM(BILL_CYCLE))<>0 THEN 1 ELSE 0 END) TOTAL_BILL_CYCLE
, COUNT(DISTINCT CASE WHEN LENGTH(TRIM(BILL_CYCLE))<>0 THEN BILL_CYCLE ELSE 0  END) TOTAL_DISTINTOS_BILL_CYCLE
, SUM(CASE WHEN LENGTH(TRIM(AMOUNT))<>0 THEN 1 ELSE 0 END) TOTAL_AMOUNT
, COUNT(DISTINCT CASE WHEN LENGTH(TRIM(AMOUNT))<>0 THEN AMOUNT ELSE 0  END) TOTAL_DISTINTOS_AMOUNT
, SUM(CASE WHEN LENGTH(TRIM(BILL_METHOD))<>0 THEN 1 ELSE 0 END) TOTAL_BILL_METHOD
, COUNT(DISTINCT CASE WHEN LENGTH(TRIM(BILL_METHOD))<>0 THEN BILL_METHOD ELSE 0  END) TOTAL_DISTINTOS_BILL_METHOD
FROM STAGE.STG_FACTURAS_FCT;

# 2) Creación de las tablas en ODS<---

# 2.1 Creación tabla dimensión Métodos de pago
DROP TABLE IF EXISTS ODS.ODS_DM_METODOS_PAGO;
CREATE TABLE ODS.ODS_DM_METODOS_PAGO
(ID_METODO_PAGO INT(10) UNSIGNED AUTO_INCREMENT PRIMARY KEY
, DE_METODO_PAGO VARCHAR(512)
, FC_INSERT DATETIME
, FC_MODIFICACION DATETIME);

ANALYZE TABLE ODS.ODS_DM_METODOS_PAGO;

# 2.2 Creación tabla dimensión Ciclos de facturación
DROP TABLE IF EXISTS ODS.ODS_DM_CICLOS_FACTURACION;
CREATE TABLE ODS.ODS_DM_CICLOS_FACTURACION
(ID_CICLO_FACTURACION INT(10) UNSIGNED AUTO_INCREMENT PRIMARY KEY
, DE_CICLO_FACTURACION VARCHAR(512)
, FC_INSERT DATETIME
, FC_MODIFICACION DATETIME);

ANALYZE TABLE ODS.ODS_DM_CICLOS_FACTURACION;

# 2.3 Creación tabla hechos Facturas
DROP TABLE IF EXISTS ODS.ODS_HC_FACTURAS;
CREATE TABLE ODS.ODS_HC_FACTURAS
(ID_FACTURA INT(10) UNSIGNED AUTO_INCREMENT PRIMARY KEY
, ID_CLIENTE INT(11)
, FC_INICIO DATE
, FC_FIN DATE
, FC_ESTADO DATE
, FC_PAGO DATE
, ID_CICLO_FACTURACION INT(10) UNSIGNED
, ID_METODO_PAGO INT(10) UNSIGNED
, CANTIDAD INT(11)
, FC_INSERT DATETIME
, FC_MODIFICACION DATETIME);

ANALYZE TABLE ODS.ODS_HC_FACTURAS;


# 3) Creación FKs <---

ALTER TABLE ODS.ODS_HC_FACTURAS ADD INDEX fk_fact_ciclo_idx (ID_CICLO_FACTURACION ASC);
ALTER TABLE ODS.ODS_HC_FACTURAS ADD CONSTRAINT fk_fac_ciclo FOREIGN KEY(ID_CICLO_FACTURACION)
   REFERENCES ODS.ODS_DM_CICLOS_FACTURACION(ID_CICLO_FACTURACION);

ALTER TABLE ODS.ODS_HC_FACTURAS ADD INDEX fk_fact_met_idx (ID_METODO_PAGO ASC);
ALTER TABLE ODS.ODS_HC_FACTURAS ADD CONSTRAINT fk_fac_met FOREIGN KEY(ID_METODO_PAGO)
   REFERENCES ODS.ODS_DM_METODOS_PAGO(ID_METODO_PAGO);

ALTER TABLE ODS.ODS_HC_FACTURAS ADD INDEX fk_fac_cli_idx (ID_CLIENTE ASC);
ALTER TABLE ODS.ODS_HC_FACTURAS ADD CONSTRAINT fk_fac_cli FOREIGN KEY (ID_CLIENTE)
     REFERENCES ODS.ODS_HC_CLIENTES(ID_CLIENTE);


# 4) Poblamos el modelo <---

# 4.1 Poblamos tabla dimensión Métodos de pago
INSERT INTO ODS.ODS_DM_METODOS_PAGO (DE_METODO_PAGO, FC_INSERT, FC_MODIFICACION)
SELECT DISTINCT UPPER(TRIM(BILL_METHOD)) METODO_PAGO
, NOW(), NOW()
FROM STAGE.STG_FACTURAS_FCT FACT
WHERE TRIM(BILL_METHOD)<>'';
INSERT INTO ODS.ODS_DM_METODOS_PAGO VALUES (9999,'DESCONOCIDO', NOW(),NOW());
INSERT INTO ODS.ODS_DM_METODOS_PAGO VALUES (9998,'NO APLICA', NOW(),NOW());
COMMIT;

ANALYZE TABLE ODS.ODS_DM_METODOS_PAGO;

# 4.2 Poblamos tabla dimensión Ciclos de facturación
INSERT INTO ODS.ODS_DM_CICLOS_FACTURACION (DE_CICLO_FACTURACION, FC_INSERT, FC_MODIFICACION)
SELECT DISTINCT UPPER(TRIM(BILL_CYCLE)) CICLO
, NOW(), NOW()
FROM STAGE.STG_FACTURAS_FCT FACT
WHERE TRIM(BILL_CYCLE)<>'';
INSERT INTO ODS.ODS_DM_CICLOS_FACTURACION VALUES (9999,'DESCONOCIDO', NOW(),NOW());
INSERT INTO ODS.ODS_DM_CICLOS_FACTURACION VALUES (9998,'NO APLICA', NOW(),NOW());
COMMIT;

ANALYZE TABLE ODS.ODS_DM_CICLOS_FACTURACION;

# 4.3 Se añaden los clientes de la tabla de STAGE del facturador que no existen en la tabla clientes en ODS
INSERT INTO ODS.ODS_HC_CLIENTES
(ID_CLIENTE
, NOMBRE_CLIENTE
, APELLIDOS_CLIENTE
, NUMDOC_CLIENTE
, ID_SEXO
, ID_DIRECCION_CLIENTE
, TELEFONO_CLIENTE
, EMAIL
, FC_NACIMIENTO
, ID_PROFESION
, ID_COMPANYA
, FC_INSERT
, FC_MODIFICACION)
SELECT DISTINCT(CUSTOMER_ID)
, 'DESCONOCIDO'
, 'DESCONOCIDO'
, '99-999-9999'
, 99
, 999999
, '9999999999'
, 'DESCONOCIDO'
, STR_TO_DATE('9999-12-31','%Y-%m-%d')
, 999
, 999
, NOW()
, NOW()
FROM STAGE.STG_FACTURAS_FCT SSFC
LEFT JOIN ODS.ODS_HC_CLIENTES OHCL
ON SSFC.CUSTOMER_ID = OHCL.ID_CLIENTE
WHERE OHCL.ID_CLIENTE IS NULL;
COMMIT;

ANALYZE ODS.TABLE ODS_HC_CLIENTES;

# 4.4 Poblamos tabla hechos Facturas
INSERT INTO ODS.ODS_HC_FACTURAS
(ID_FACTURA
, ID_CLIENTE
, FC_INICIO
, FC_FIN
, FC_ESTADO
, FC_PAGO
, ID_CICLO_FACTURACION
, ID_METODO_PAGO
, CANTIDAD
, FC_INSERT
, FC_MODIFICACION)
SELECT SSFC.BILL_REF_NO
, OOHC.ID_CLIENTE
, CASE WHEN TRIM(SSFC.START_DATE)<>'' THEN STR_TO_DATE(LEFT(SSFC.START_DATE,10),'%Y-%m-%d') ELSE STR_TO_DATE('31/12/9999','%d/%m/%Y') END FC_INICIO
, CASE WHEN TRIM(SSFC.END_DATE)<>'' THEN STR_TO_DATE(LEFT(SSFC.END_DATE,10),'%Y-%m-%d') ELSE STR_TO_DATE('31/12/9999','%d/%m/%Y') END FC_FIN
, CASE WHEN TRIM(SSFC.STATEMENT_DATE)<>'' THEN STR_TO_DATE(LEFT(SSFC.STATEMENT_DATE,10),'%Y-%m-%d') ELSE STR_TO_DATE('31/12/9999','%d/%m/Y') END FC_ESTADO
, CASE WHEN TRIM(SSFC.PAYMENT_DATE)<>'' THEN STR_TO_DATE(LEFT(SSFC.PAYMENT_DATE,10),'%Y-%m-%d') ELSE STR_TO_DATE('31/12/9999','%d/%m/%Y') END FC_PAGO
, OODC.ID_CICLO_FACTURACION
, OODM.ID_METODO_PAGO
, SSFC.AMOUNT
, NOW()
, NOW()
FROM STAGE.STG_FACTURAS_FCT SSFC
INNER JOIN ODS.ODS_HC_CLIENTES OOHC ON (OOHC.ID_CLIENTE=SSFC.CUSTOMER_ID)
INNER JOIN ODS.ODS_DM_CICLOS_FACTURACION OODC ON CASE WHEN TRIM(SSFC.BILL_CYCLE)<>'' THEN UPPER(TRIM(SSFC.BILL_CYCLE)) ELSE 'DESCONOCIDO' END=OODC.DE_CICLO_FACTURACION
INNER JOIN ODS.ODS_DM_METODOS_PAGO OODM ON CASE WHEN TRIM(SSFC.BILL_METHOD)<>'' THEN UPPER(TRIM(SSFC.BILL_METHOD)) ELSE 'DESCONOCIDO' END=OODM.DE_METODO_PAGO;
COMMIT;

ANALYZE ODS.TABLE ODS_HC_FACTURAS;
